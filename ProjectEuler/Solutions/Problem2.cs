using System;

namespace ProjectEuler.Solutions
{
    /// <summary>
    /// Represents the second problem in Project Euler
    /// </summary>
    public sealed class Problem2 : ISolution
    {
        #region Properties
        /// <summary>
        /// Represents the name of the second problem
        /// </summary>
        public string Name => "Even Fibonacci numbers";
        /// <summary>
        /// Represents the description of the second problem
        /// </summary>
        public string Description => $"Each new term in the Fibonacci sequence is generated by adding the previous two terms.{Environment.NewLine}" +
            $"By starting with 1 and 2, the first 10 terms will be:{Environment.NewLine}" +
            $"1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...{Environment.NewLine}" +
            $"By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
        #endregion

        #region Constrcutors
        /// <summary>
        /// Initializes a new instance of <see cref="Problem2"/> class
        /// </summary>
        public Problem2()
        {
        }
        #endregion

        #region Public methods
        /// <summary>
        /// Executes the algorithm of the second problem to get the solution
        /// </summary>
        /// <returns>A <see cref="string"/> object which represents the solution of the second problem</returns>
        public string Execute()
        {
            int result = 0;
            int previousterm = 0;
            int currentTerm = 1;

            while (true)
            {
                int tempCurrentTerm = currentTerm;

                currentTerm = AddTerms(previousterm, currentTerm);

                if (currentTerm > 4000000)
                    break;

                previousterm = tempCurrentTerm;

                if (currentTerm % 2 == 0)
                    result += currentTerm;
            }

            return result.ToString();
        }
        #endregion

        #region Private methods
        private static int AddTerms(int left, int right) => left + right;
        #endregion
    }
}
